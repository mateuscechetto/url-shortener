package com.zg.UrlShortener.service;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import com.zg.UrlShortener.model.Url;

import repository.UrlRepository;

@Component
public class UrlShortnerService {
	
	private int currentID;
	
	@Autowired
	private UrlRepository urlRepository;

	public Url generateShortUrl(String originalUrl) {
		
		String shortUrl = encodeUrl(currentID);
		Url urlToPersist = new Url(currentID, originalUrl, shortUrl);
		return persistShortUrl(urlToPersist);
	}
	
	
	public Url persistShortUrl(Url url) {
		return urlRepository.save(url);
	}
	
	public Url getOriginalUrl(String url) {
		return urlRepository.findByShortUrl(url);
		
	}
	
	private String encodeUrl(int counter) {
		final char[] charSet = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789".toCharArray();
		StringBuilder shortUrl = new StringBuilder();
		while(counter > 0) {
			shortUrl.append(charSet[counter % 62]);
			counter = counter / 62;
		}
		return shortUrl.toString();
	}
}
